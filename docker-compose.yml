version: '3'

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    networks:
      - kafka-net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-1:
    image: confluentinc/cp-kafka:7.2.2
    container_name: kafka-1
    networks:
      - kafka-net
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:29092,EXTERNAL://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  kafka-2:
    image: confluentinc/cp-kafka:7.2.2
    container_name: kafka-2
    networks:
      - kafka-net
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:29093,EXTERNAL://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  # connect:
  #   image: confluentinc/cp-kafka-connect:7.2.2
  #   container_name: connect
  #   environment:
  #     CONNECT_BOOTSTRAP_SERVERS: "kafka-1:29092,kafka-2:29093"
  #     CONNECT_REST_PORT: "8083"
  #     CONNECT_GROUP_ID: "kpow-local-connect"
  #     CONNECT_CONFIG_STORAGE_TOPIC: "kpow-local-connect-config"
  #     CONNECT_OFFSET_STORAGE_TOPIC: "kpow-local-connect-offsets"
  #     CONNECT_STATUS_STORAGE_TOPIC: "kpow-local-connect-status"
  #     CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
  #     CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
  #     CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
  #     CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
  #     CONNECT_REST_ADVERTISED_HOST_NAME: "localhost"
  #     CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
  #     CONNECT_PLUGIN_PATH: /usr/share/java/,/etc/kafka-connect/jars
  #   depends_on:
  #     - zookeeper
  #     - kafka-1
  #     - kafka-2
  #   volumes:
  #     - ./connect:/etc/kafka-connect/jars
  #   networks:
  #     - kafka-net

  init-kafka:
    image: confluentinc/cp-kafka:7.2.2
    depends_on:
      - zookeeper
      - kafka-1
      - kafka-2
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka-1:9092 --create --if-not-exists --topic logs --replication-factor 2 --partitions 1
      kafka-topics --bootstrap-server kafka-2:9092 --create --if-not-exists --topic logs --replication-factor 2 --partitions 1
      "

  log-producer-1:
    container_name: log-producer-1
    build:
      context: ./server/log_producer
      dockerfile: Dockerfile
    environment:
      - PORT=3000
      - KAFKA_ADDR=kafka-1:29092,kafka-2:29093
    depends_on:
      - kafka-1
      - kafka-2
    networks:
      - kafka-net
    restart: always

  log-producer-2:
    container_name: log-producer-2
    build:
      context: ./server/log_producer
      dockerfile: Dockerfile
    environment:
      - PORT=3000
      - KAFKA_ADDR=kafka-1:29092,kafka-2:29093
    depends_on:
      - kafka-1
      - kafka-2
    networks:
      - kafka-net
    restart: always

  log-producer-nginx:
    image: nginx
    container_name: log-producer-nginx
    ports:
      - "3000:80"
    volumes:
      - ./nginx/log-producer.conf:/etc/nginx/nginx.conf
    depends_on:
      - log-producer-1
      - log-producer-2
    networks:
      - kafka-net
    restart: always

  log-consumer:
    container_name: log-consumer
    build:
      context: ./server/log_consumer
      dockerfile: Dockerfile
    environment:
      - KAFKA_ADDR=kafka-1:29092,kafka-2:29093
    depends_on:
      - kafka-1
      - kafka-2
    networks:
      - kafka-net
  
  # web-client:
  #   container_name: web-client
  #   build:
  #     context: ./client
  #     dockerfile: Dockerfile
  #   ports:
  #     - "4173:4173"
  #   restart: always


networks:
  kafka-net:
    driver: bridge
